import React, { useState, useEffect, useContext } from 'react';import { Input, Pagination } from 'antd';import debounce from 'lodash.debounce';import Load from '../Load/Load';import MovieList from '../MovieList/MovieList';import Movie from '../Movie/Movie';import { GlobalContext } from '../Context/GlobalContext';import { getGenresApi, getMoviesApi } from '../../services/Services';const MOVIESURL = 'https://api.themoviedb.org/3/movie/top_rated?api_key=98afe23e546cecc06bd27931bbacb27e';const PageSearch = () => {  const [isLoading, setIsLoading] = useState(true);  const [movies, setMovies] = useState([]);  const { setGenre, getGenres } = useContext(GlobalContext);  const [query, setQuery] = useState('');  const [totalPages, setTotalPages] = useState(5);  const getMovies = async (url) => {    const { results: movies, total_pages: pages } = await getMoviesApi(url)      .catch((e) => {        alert(`Проверьте интернет соединение, ошибка ${e}`);      })      .then((response) => response.data);    setIsLoading(true);    // const { genres } = await axios    //   .get('https://api.themoviedb.org/3/genre/movie/list?api_key=98afe23e546cecc06bd27931bbacb27e')    //   .then((response) => response.data);    const { genres } = await getGenresApi().then((res) => res.data);    setIsLoading(false);    setTotalPages(pages);    setMovies([...movies]);    setGenre([...genres]);    return movies;  };  const onChange = (e) => {    e.preventDefault();    setQuery(e.target.value);    getMovies(      `https://api.themoviedb.org/3/search/movie?api_key=98afe23e546cecc06bd27931bbacb27e&language=en-US&query=${e.target.value}&page=1`    );  };  useEffect(() => {    (async function fetch() {      await getMovies(MOVIESURL);      setTotalPages(1);    })();  }, []);  const renderMovies = () => {    if (movies.length === 0) {      return <span>Movies not found!</span>;    }    return movies.map((el) => {      const genres = getGenres(el);      return (        <Movie          voteAverage={el.vote_average}          key={el.id}          description={el.overview}          title={el.original_title}          poster={el.poster_path}          genres={genres}          releaseDate={el.release_date}          movie={el}        />      );    });  };  const updatedOnChange = (e) => onChange(e);  const debouncedChange = debounce(updatedOnChange, 500);  return (    <div>      {isLoading ? (        <Load />      ) : (        <div className={'search-input'}>          <Input placeholder={'search movies'} onChange={debouncedChange} />          <MovieList>{renderMovies()}</MovieList>        </div>      )}      <Pagination        style={{          display: 'flex',          justifyContent: 'center',        }}        defaultCurrent={1}        total={totalPages * 10}        onChange={(page) => {          getMovies(            `https://api.themoviedb.org/3/search/movie?api_key=98afe23e546cecc06bd27931bbacb27e&language=en-US&query=${query}&page=${page}`          );        }}      />    </div>  );};export default PageSearch;